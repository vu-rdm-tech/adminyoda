version: '3'

services:
  adminyoda-web:
    container_name: adminyoda-web
    #restart: always
    build:
      context: .
      args:
        - APP_USER_UID=${USER_UID}
        - APP_USER_GID=${USER_GID}
    user: ${USER_UID}:${USER_GID}
    depends_on:
      - adminyoda-db
    environment:
      DB_USER: ${DB_USER}
      DB_PW: ${DB_PW}
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      SITE_NAME: 127.0.0.1
      SECRET: ${SECRET}
    ports:
      - "8000:8000"
    volumes:
      - .:/usr/src/app
      - /docker/adminyoda/log:/usr/app/log

  adminyoda-task:
    container_name: adminyoda-task
    build:
      context: .
      args:
        - APP_USER_UID=${USER_UID}
        - APP_USER_GID=${USER_GID}
    user: ${USER_UID}:${USER_GID}
    depends_on:
      - adminyoda-db
    environment:
      DB_USER: ${DB_USER}
      DB_PW: ${DB_PW}
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DATADIR: /data
      SRAMDATADIR: /sramdata
      SITE_NAME: adminyoda.labs.vu.nl
      SECRET: ${SECRET}
    command: python manage.py qcluster
    volumes:
      - .:/usr/src/app
      - /docker/adminyoda/log:/usr/app/log
      - ${DATASRC}:/data:rw
      - ${SRAMDATASRC}:/sramdata:rw

  adminyoda-db:
    container_name: ${DB_HOST}
    image: postgres:14
    environment:
      POSTGRES_PASSWORD: ${DB_PW}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "15432:5432"
    volumes:
      - /docker/adminyoda/db:/var/lib/postgresql/data

  nginx:
    image: nginx:latest
    container_name: nginx
    depends_on:
      - adminyoda-web
    ports:
      - "8080:80"
    volumes:
      - ./static:/static:ro  # for syncing with django source code
      - ./nginx_conf:/etc/nginx/conf.d:ro